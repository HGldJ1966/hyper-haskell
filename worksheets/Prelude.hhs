{
  "version": "0.2.0.0",
  "cells": [
    {
      "cell_type": "text",
      "source": "In HyperHaskell, you may have to add a type signature in order to avoid type ambiguities.\n"
    },
    {
      "cell_type": "code",
      "source": "2 * 3 * 7 :: Int"
    },
    {
      "cell_type": "text",
      "source": "You can enter arbitrary Haskell expressions.\n"
    },
    {
      "cell_type": "code",
      "source": "let fibs = 1 : 1 : zipWith (+) fibs (tail fibs) in take 20 fibs :: [Int]"
    },
    {
      "cell_type": "text",
      "source": "It is also possible to bind new variables in the IO monad, via a statement.\n"
    },
    {
      "cell_type": "code",
      "source": "test <- return \"Hello\""
    },
    {
      "cell_type": "code",
      "source": "test"
    },
    {
      "cell_type": "text",
      "source": "Input cells can span multiple lines. Statements are executed in sequence.\n"
    },
    {
      "cell_type": "code",
      "source": "test <- return \"Multiple lines\"\ntest"
    }
  ],
  "importModules": "Prelude",
  "loadFiles": "",
  "settings": {
    "packageTool": "stack",
    "packagePath": "../haskell/stack.yaml",
    "searchPath": "../worksheets"
  }
}